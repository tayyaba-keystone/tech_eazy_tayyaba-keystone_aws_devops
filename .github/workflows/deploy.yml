name: Deploy Java App via Terraform

on:
  push:
    branches:
      - main
    tags:
      - deploy-dev
      - deploy-prod

jobs:
  deploy:
    name: Provision and Deploy
    runs-on: ubuntu-latest

    env:
      BUCKET_NAME: ${{ secrets.TF_VAR_BUCKET_NAME }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -var="bucket_name=${{ env.BUCKET_NAME }}"

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="bucket_name=${{ env.BUCKET_NAME }}"

      - name: Get EC2 Public IP
        shell: bash
        run: |
          IP=$(aws ec2 describe-instances \
            --filters Name=tag:Name,Values=AppServer \
            --query "Reservations[*].Instances[*].PublicIpAddress" \
            --output text | tr -d '\r')
          echo "EC2_IP=${IP}" >> $GITHUB_ENV
      - name: Save EC2 private key
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem
      
      - name: Health Check - Port 80
        run: |
          for i in {1..10}; do
            status=$(curl -s -o /dev/null -w "%{http_code}" http://$EC2_IP)
            if [ "$status" -eq 200 ]; then
              echo " App is healthy on port 80"
              exit 0
            fi
            echo "Waiting for app... ($i)"
            sleep 10
          done
          echo " App failed health check"

          exit 1